Operators test:
a=43690
b=21930
~a=21845
-b=43606
+a=43690
a+b=84
a-b=21760
a&b=170
a|b=65450
a^b=65280
a&&b=1
a||b=1
a&&0=0
a||0=1
(-1 > 0)=0
(-1 >= 0)=0
(-1 < 0)=1
(-1 <= 0)=1
(32767>0)=1
(32767>=0)=1
(32767<0)=0
(32767<=0)=0
(32767>-2)=1
(32767>=-2)=1
(32767<-2)=0
(32767<=-2)=0
x=5
y=10
x>y-6=1

unsigned magnitude comparison:
0 < 0 = 0
0 > 0 = 0
0 <= 0 = 1
0 >= 0 = 1
0 lt 0 = 0
0 gt 0 = 0
0 le 0 = 1
0 ge 0 = 1
0 < 16320 = 1
0 > 16320 = 0
0 <= 16320 = 1
0 >= 16320 = 0
0 lt 16320 = 1
0 gt 16320 = 0
0 le 16320 = 1
0 ge 16320 = 0
0 < 32640 = 1
0 > 32640 = 0
0 <= 32640 = 1
0 >= 32640 = 0
0 lt 32640 = 1
0 gt 32640 = 0
0 le 32640 = 1
0 ge 32640 = 0
0 < 48960 = 0
0 > 48960 = 1
0 <= 48960 = 0
0 >= 48960 = 1
0 lt 48960 = 1
0 gt 48960 = 0
0 le 48960 = 1
0 ge 48960 = 0
16320 < 16320 = 0
16320 > 16320 = 0
16320 <= 16320 = 1
16320 >= 16320 = 1
16320 lt 16320 = 0
16320 gt 16320 = 0
16320 le 16320 = 1
16320 ge 16320 = 1
16320 < 32640 = 1
16320 > 32640 = 0
16320 <= 32640 = 1
16320 >= 32640 = 0
16320 lt 32640 = 1
16320 gt 32640 = 0
16320 le 32640 = 1
16320 ge 32640 = 0
16320 < 48960 = 0
16320 > 48960 = 1
16320 <= 48960 = 0
16320 >= 48960 = 1
16320 lt 48960 = 1
16320 gt 48960 = 0
16320 le 48960 = 1
16320 ge 48960 = 0
32640 < 32640 = 0
32640 > 32640 = 0
32640 <= 32640 = 1
32640 >= 32640 = 1
32640 lt 32640 = 0
32640 gt 32640 = 0
32640 le 32640 = 1
32640 ge 32640 = 1
32640 < 48960 = 0
32640 > 48960 = 1
32640 <= 48960 = 0
32640 >= 48960 = 1
32640 lt 48960 = 1
32640 gt 48960 = 0
32640 le 48960 = 1
32640 ge 48960 = 0
48960 < 48960 = 0
48960 > 48960 = 0
48960 <= 48960 = 1
48960 >= 48960 = 1
48960 lt 48960 = 0
48960 gt 48960 = 0
48960 le 48960 = 1
48960 ge 48960 = 1

Fibonacci numbers:
fib(1) = 1
rfib(1) = 1
fib(2) = 1
rfib(2) = 1
fib(3) = 2
rfib(3) = 2
fib(4) = 3
rfib(4) = 3
fib(5) = 5
rfib(5) = 5
fib(6) = 8
rfib(6) = 8
fib(7) = 13
rfib(7) = 13
fib(8) = 21
rfib(8) = 21
fib(9) = 34
rfib(9) = 34
fib(10) = 55
rfib(10) = 55
fib(11) = 89
rfib(11) = 89
fib(12) = 144
rfib(12) = 144
fib(13) = 233
rfib(13) = 233
fib(14) = 377
rfib(14) = 377
fib(15) = 610
rfib(15) = 610
fib(16) = 987
rfib(16) = 987
fib(17) = 1597
rfib(17) = 1597
fib(18) = 2584
rfib(18) = 2584
fib(19) = 4181
fib(20) = 6765
fib(21) = 10946
fib(22) = 17711
fib(23) = 28657

string: Hello, world!
reversed: !dlrow ,olleH
re-reversed: Hello, world!
cmp self: 0
cmp hello world: 0
cmp foo: 65506
length: 13

Nested function calls/declarations:
1. Hello, world
2. 5 = 5

Pointers to locals:
1. x = 5
1. y = 10
1. *p = 5
2. x = 7
2. y = 10
2. *p = 7
3. x = 7
3. y = 10
3. *p = 10
4. x = 7
4. y = 11
4. *p = 11

loop break/continue:
1: i < 10
2: i < 10
3: i < 10
4: i < 10
5: i < 10
6: i < 10
7: i < 10
8: i < 10
9: i < 10
10: i >= 10
11: i >= 10
12: i >= 10
13: i >= 10
14: i >= 10
15: i >= 10
16: i >= 10
17: i >= 10
18: i >= 10
19: i >= 10
20: i >= 20

fizzbuzz:
1 2 fizz 4 buzz fizz 7 8 fizz buzz 11 fizz 13 14 fizzbuzz 16 17 fizz 19 buzz fizz 22 23 fizz buzz 26 fizz 28 29 fizzbuzz 31 32 fizz 34 buzz fizz 37 38 fizz buzz 41 fizz 43 44 fizzbuzz 46 47 fizz 49 buzz fizz 52 53 fizz buzz 56 fizz 58 59 fizzbuzz 61 62 fizz 64 buzz fizz 67 68 fizz buzz 71 fizz 73 74 fizzbuzz 76 77 fizz 79 buzz fizz 82 83 fizz buzz 86 fizz 88 89 fizzbuzz 91 92 fizz 94 buzz fizz 97 98 fizz 

x-prime=65532

primes:


list:
1 2 3 4 
length = 4
pop 4
length = 3
3 2 1 
length = 3
shift 3
length = 2

array:
Hello, world! For time no. 1
arr[3]=1
strcmp(arr[0],"Hello, ")=0
strcmp(arr[0],"foo")=65506
Hello, world! For time no. 2
arr[3]=2
strcmp(arr[0],"Hello, ")=0
strcmp(arr[0],"foo")=65506
Hello, world! For time no. 3
arr[3]=3
strcmp(arr[0],"Hello, ")=0
strcmp(arr[0],"foo")=65506
Hello, world! For time no. 4
arr[3]=4
strcmp(arr[0],"Hello, ")=0
strcmp(arr[0],"foo")=65506
Hello, world! For time no. 5
arr[3]=5
strcmp(arr[0],"Hello, ")=0
strcmp(arr[0],"foo")=65506
Hello, world! For time no. 6
arr[3]=6
strcmp(arr[0],"Hello, ")=0
strcmp(arr[0],"foo")=65506
Hello, world! For time no. 7
arr[3]=7
strcmp(arr[0],"Hello, ")=0
strcmp(arr[0],"foo")=65506
Hello, world! For time no. 8
arr[3]=8
strcmp(arr[0],"Hello, ")=0
strcmp(arr[0],"foo")=65506
Hello, world! For time no. 9
arr[3]=9
strcmp(arr[0],"Hello, ")=0
strcmp(arr[0],"foo")=65506
Hello, world! For time no. 10
arr[3]=10
strcmp(arr[0],"Hello, ")=0
strcmp(arr[0],"foo")=65506

sp change=0
